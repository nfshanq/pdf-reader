name: Build Electron App

permissions:
  contents: write # Allow creating releases
  actions: read # Allow reading artifacts

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: macos-latest
            platform: darwin
            arch: arm64
            name: macOS Apple Silicon
          - os: windows-latest
            platform: win32
            arch: x64
            name: Windows x64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies (Unix)
        if: runner.os != 'Windows'
        run: npm ci

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: npm ci --no-audit --prefer-offline --force

      - name: Build web assets
        run: npm run build

      - name: Build Electron app
        run: npm run electron:build
        env:
          # Current: Disable code signing (uncomment below to enable)
          CSC_IDENTITY_AUTO_DISCOVERY: false
          CSC_LINK: ""
          CSC_KEY_PASSWORD: ""
          APPLE_ID: ""
          APPLE_ID_PASSWORD: ""
          # Future: Enable code signing (uncomment when ready)
          # CSC_IDENTITY_AUTO_DISCOVERY: true
          # CSC_LINK: ${{ secrets.CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          # GitHub Token for electron-builder publishing
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: pdf-reader-macos-arm64
          path: |
            dist-electron/*.dmg
            dist-electron/*.zip
          retention-days: 7

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: pdf-reader-windows-x64
          path: |
            dist-electron/*.exe
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
